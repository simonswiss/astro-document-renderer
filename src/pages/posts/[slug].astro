---
import { createReader } from '@keystatic/core/reader';
import { DocumentRenderer } from '@keystatic/core/renderer';

import keystaticConfig from '../../../keystatic.config';
import { TeamMemberBio } from '../../document-renderer/team-member-bio.tsx';
import { AstroDocumentRenderer } from '../../document-renderer/astro-document-renderer.tsx'

import Layout from '../../layouts/Layout.astro';

const { slug } = Astro.params;
if (!slug) throw new Error('Slug not found');

const reader = createReader(process.cwd(), keystaticConfig);
const post = await  reader.collections.posts.read(slug, { resolveLinkedFiles: true})

if (!post) throw new Error('No post found for this slug');

// Generate static pages
export async function getStaticPaths() {
  const reader = createReader(process.cwd(), keystaticConfig);
  const posts = await reader.collections.posts.list();
  return posts.map(post => ({ params: { slug: post } }));
}
---
<Layout title={post.title}>
  <h1>{post.title}</h1>

  <!-- This doesn't work — the client:load prop is not respected -->
  <DocumentRenderer client:load document={post.content} componentBlocks={{
    teamMemberBio: TeamMemberBio
  }} />
  
  <!-- 
    This works, but the `componentBlocks` need to be passed to 
    the component definition directly.

    If passed here, the `compopnentBlocks` prop will have `{ teamMemberBio: null}`.
  -->
  <AstroDocumentRenderer client:load document={post.content} />

</Layout>
